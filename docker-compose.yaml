services:

  # Laravel Application
  app:
    image: order_return_db
    build:
      dockerfile: docker/app.Dockerfile
    container_name: ${APP_CONTAINER}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
      - TZ="Asia/Manila"
    volumes:
      - type: bind
        source: ./
        target: /var/www/app-source/
    restart: unless-stopped
    networks:
      - order_return_network

  # Web Server Nginx
  nginx:
    build:
      dockerfile: docker/nginx.Dockerfile
    container_name: ${NGINX_CONTAINER}
    command: [ nginx-debug, '-g', 'daemon off;' ]
    environment:
      - TZ="Asia/Manila"
    volumes:
      - type: bind
        source: ./
        target: /var/www/app-source/
    restart: unless-stopped
    ports:
      - ${NGINX_EXPOSED_PORT}:80
    networks:
      - order_return_network
    depends_on:
      - app

  # Queue Service
  queue:
    image: order_return_db
    container_name: ${QUEUE_CONTAINER}
    restart: always
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=queue
    working_dir: /var/www/app-source
    command: php artisan queue:work --queue=default,emails,notifications,listeners
    volumes:
      - ./:/var/www/app-source
    depends_on:
      - app
    networks:
      - order_return_network

networks:
 order_return_network:
  driver: bridge