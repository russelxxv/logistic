services:

  # Laravel Application
  app:
    image: logistic-app
    build:
      dockerfile: docker/app.Dockerfile
    container_name: ${APP_CONTAINER}
    environment:
      - APP_ENV=${APP_ENV}
      - CONTAINER_ROLE=app
      - TZ="Asia/Manila"
    volumes:
      - type: bind
        source: ./
        target: /var/www/app-source/
    restart: unless-stopped
    depends_on:
      - db-test
    networks:
      - logistic_network

  # Web Server Nginx
  nginx:
    build:
      dockerfile: docker/nginx.Dockerfile
    container_name: ${NGINX_CONTAINER}
    command: [ nginx-debug, '-g', 'daemon off;' ]
    environment:
      - TZ="Asia/Manila"
    volumes:
      - type: bind
        source: ./
        target: /var/www/app-source/
    restart: unless-stopped
    ports:
      - ${NGINX_EXPOSED_PORT}:80
    networks:
      - logistic_network
    depends_on:
      - app

  # DB Testing When (Assigned in .env.testing)
  db-test:
    image: mysql:8.1.0
    container_name: ${DB_TEST_CONTAINER}
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - '6002:3306'
    volumes:
      - type: volume
        source: logistic-db-test-volume
        target: /var/lib/mysql
    environment:
      MYSQL_DATABASE: logistic_db
      MYSQL_ROOT_PASSWORD: password
    networks:
      - logistic_network

networks:
 logistic_network:
  driver: bridge

volumes:
  logistic-db-test-volume: